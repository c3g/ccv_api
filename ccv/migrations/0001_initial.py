# Generated by Django 3.0.5 on 2020-04-26 17:55

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import djangoyearlessdate.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Degree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[("Bachelor's", "Bachelor's"), ("Bachelor's Equivalent", "Bachelor's Equivalent"), ("Bachelor's Honours", "Bachelor's Honours"), ("Master's Equivalent", "Master's Equivalent"), ("Master's non-Thesis", "Master's non-Thesis"), ("Master's Thesis", "Master's Thesis"), ('Doctorate', 'Doctorate'), ('Doctorate Equivalent', 'Doctorate Equivalent'), ('Post-doctorate', 'Post-doctorate'), ('Certificate', 'Certificate'), ('Diploma', 'Diploma'), ('Habilitation', 'Habilitation'), ('Research Associate', 'Research Associate')], max_length=30)),
                ('name', models.CharField(max_length=100, null=True)),
                ('specialization', models.CharField(max_length=100, null=True)),
                ('thesis_title', models.TextField(max_length=500, null=True)),
                ('status', models.CharField(choices=[('All But Degree', 'All But Degree'), ('Completed', 'Completed'), ('In Progress', 'In Progress'), ('Withdrawn', 'Withdrawn')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('expected_date', models.DateField()),
                ('phd_without_masters', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Identification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(choices=[('Dr.', 'Dr.'), ('Mr.', 'Mr.'), ('Mrs.', 'Mrs.'), ('Ms.', 'Ms.'), ('Professor', 'Professor'), ('Reverend', 'Reverend')], max_length=50)),
                ('family_name', models.CharField(max_length=50)),
                ('first_name', models.CharField(max_length=50)),
                ('middle_name', models.CharField(max_length=50)),
                ('previous_family_name', models.CharField(max_length=50, null=True)),
                ('previous_first_name', models.CharField(max_length=50, null=True)),
                ('date_of_birth', djangoyearlessdate.models.YearlessDateField(max_length=4)),
                ('sex', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('No Response', 'No Response')], max_length=20, null=True)),
                ('designated_group', models.CharField(choices=[('Aboriginal', 'Aboriginal'), ('Disabled', 'Disabled'), ('Visible Minority', 'Visible Minority')], max_length=50)),
                ('correspondence_language', models.CharField(choices=[('English', 'English'), ('French', 'French')], max_length=10)),
                ('canadian_residency_status', models.CharField(choices=[('Canadian Citizen', 'Canadian Citizen'), ('Not Applicable', 'Not Applicable'), ('Permanent Resident', 'Permanent Resident'), ('Refugee', 'Refugee'), ('Student Work Permit', 'Student Work Permit'), ('Study Permit', 'Study Permit'), ('Visitor Visa', 'Visitor Visa'), ('Work Permit', 'Work Permit')], max_length=50)),
                ('permanent_residency', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=50)),
                ('permanent_residency_start_date', models.DateField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonalInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Supervisor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('researcher_status', models.CharField(choices=[('Doctoral Student', 'Doctoral Student'), ("Master's Student", "Master's Student"), ('Post-doctoral Student', 'Post-doctoral Student'), ('Researcher', 'Researcher')], max_length=30)),
                ('career_start_date', models.DateField()),
                ('engaged_in_clinical_research', models.BooleanField(default=False)),
                ('key_theory', models.TextField(max_length=500)),
                ('research_interest', models.TextField(max_length=1000)),
                ('experience_summary', models.TextField(max_length=1000)),
                ('country', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, default=list, null=True, size=None)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Website',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[('Blog', 'Blog'), ('Community', 'Community'), ('Corporate', 'Corporate'), ('Personal', 'Personal'), ('Social Media', 'Social Media')], max_length=20)),
                ('url', models.CharField(max_length=100, null=True)),
                ('personal_information', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ccv.PersonalInformation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Telephone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('phone_type', models.CharField(choices=[('Fax', 'Fax'), ('Home', 'Home'), ('Laboratory', 'Laboratory'), ('Mobile', 'Mobile'), ('Pager', 'Pager'), ('Temporary', 'Temporary'), ('Work', 'Work')], max_length=50)),
                ('country_code', models.CharField(max_length=5, null=True)),
                ('area_code', models.CharField(max_length=5, null=True)),
                ('number', models.CharField(max_length=12, null=True)),
                ('extension', models.CharField(max_length=6, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('personal_information', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ccv.PersonalInformation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TechnologicalApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subfield', models.CharField(blank=True, max_length=50, null=True)),
                ('category', models.CharField(blank=True, choices=[('Agro-alimentary', 'Agro-alimentary'), ('Chemistry / Biochemistry', 'Chemistry / Biochemistry'), ('Medical materials and instrumentation', 'Medical materials and instrumentation'), ('Orthopaedic devices', 'Orthopaedic devices'), ('Pharmacy', 'Pharmacy')], max_length=50, null=True)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ccv.UserProfile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResearchCentre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('subdivision', models.CharField(blank=True, max_length=50, null=True)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ccv.UserProfile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LanguageSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('language', models.CharField(max_length=10)),
                ('can_read', models.BooleanField()),
                ('can_write', models.BooleanField()),
                ('can_speak', models.BooleanField()),
                ('can_understand', models.BooleanField()),
                ('peer_review', models.BooleanField()),
                ('personal_information', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ccv.PersonalInformation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[('Personal', 'Personal'), ('Temporary', 'Temporary'), ('Work', 'Work')], max_length=10)),
                ('address', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('personal_information', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ccv.PersonalInformation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[('Courier', 'Courier'), ('Home', 'Home'), ('Mailing', 'Mailing'), ('Primary Affiliation', 'Primary Affiliation'), ('Temporary', 'Temporary')], max_length=20)),
                ('line_1', models.CharField(max_length=50)),
                ('line_2', models.CharField(max_length=50)),
                ('line_3', models.CharField(max_length=50)),
                ('line_4', models.CharField(max_length=50)),
                ('line_5', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('postal', models.CharField(max_length=10)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('personal_information', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ccv.PersonalInformation')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
